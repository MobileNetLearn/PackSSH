#!/bin/bash

corPadrao="\033[0m"
preto="\033[0;30m"
vermelho="\033[0;31m"
verde="\033[0;32m"
marrom="\033[0;33m"
azul="\033[0;34m"
purple="\033[0;35m"
cyan="\033[0;36m"
cinzaClaro="\033[0;37m"
pretoCinza="\033[1;30m"
vermelhoClaro="\033[1;31m"
verdeClaro="\033[1;32m"
amarelo="\033[1;33m"
azulClaro="\033[1;34m"
purpleClaro="\033[1;35m"
cyanClaro="\033[1;36m"
branco="\033[1;37m"

newclient () {
	# Generates the custom client.ovpn
	cp /etc/openvpn/client-common.txt ~/$1.ovpn
	echo "<ca>" >> ~/$1.ovpn
	cat /etc/openvpn/easy-rsa/pki/ca.crt >> ~/$1.ovpn
	echo "</ca>" >> ~/$1.ovpn
	echo "<cert>" >> ~/$1.ovpn
	cat /etc/openvpn/easy-rsa/pki/issued/$1.crt >> ~/$1.ovpn
	echo "</cert>" >> ~/$1.ovpn
	echo "<key>" >> ~/$1.ovpn
	cat /etc/openvpn/easy-rsa/pki/private/$1.key >> ~/$1.ovpn
	echo "</key>" >> ~/$1.ovpn
	echo "<tls-auth>" >> ~/$1.ovpn
	cat /etc/openvpn/ta.key >> ~/$1.ovpn
	echo "</tls-auth>" >> ~/$1.ovpn
}
# Try to get our IP from the system and fallback to the Internet.
# I do this to make the script compatible with NATed servers (lowendspirit.com)
# and to avoid getting an IPv6.
IP=$(ip addr | grep 'inet' | grep -v inet6 | grep -vE '127\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | grep -o -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | head -1)
if [[ "$IP" = "" ]]; then
		IP=$(wget -4qO- "http://whatismyip.akamai.com/")
fi

clear

mkdir arquivosopen
clear
echo -e "\033[0;32m_________________________________________________________\033[0;32m"
echo -e "\033[47;30m             GERENCIADOR DE USUARIOS OVPN               \033[0m"
echo -e "\033[0;32m_________________________________________________________\033[0;32m"
monitorar=$(ps x | grep "sshd:" | wc -l)
resultado=$(($monitorar-1))
echo -e "\033[0mTOTAL DE USUARIOS CONECTADOS:\033[1;31m $resultado \033[0m"
echo -e "\033[0;32m_________________________________________________________\033[0;32m"
echo -e "\033[01;34m\033[01;34m"
echo -e "|00| \033[01;34mVOLTAR AO MENU\033[01;34m"
echo -e "|01| \033[01;34mCRIAR USUARIO OVPN\033[01;34m"
echo -e "|02| \033[01;34mREMOVER USUARIO OVPN\033[01;34m"
echo -e "|03| \033[01;34mMUDAR VALIDADE/RENOVAR DO USUARIO OVPN\033[01;34m"
echo""
echo -e "\033[0;32m_________________________________________________________\033[0;32m"
echo -e "\033[0;31m"
read -p "[00-05]: " opcao
echo -e "\033[0;32m_________________________________________________________\033[0;32m"
case $opcao in
 00)
  PackSSH;;
  
 
 01)
        echo "--------------------------------------------------"
	echo "Digite o nome do usuário OpenVPN que deseja criar:"
	echo "Evite caracteres especiais."
        echo "--------------------------------------------------"
	echo ""
	read -p "Nome do usuário: " CLIENT
	awk -F : ' { print $1 }' /etc/passwd > /tmp/users 
	if grep -Fxq "$CLIENT" /tmp/users
	then
                while true
                do
                	clear
			echo "----------------------------"
			echo "usuário OpenVPN já existe..."
			echo " "
			echo "Digite o nome do usuário OpenVPN que deseja criar:"
			echo "Evite caracteres especiais."
        		echo "--------------------------------------------------"
			read -p "Nome do usuário: " CLIENT
                        awk -F : ' { print $1 }' /etc/passwd > /tmp/users 
			if grep -Fxq "$CLIENT" /tmp/users
                        then
			        echo ""
			else
                                break
                        fi
		done
	fi
	cd /etc/openvpn/easy-rsa/
	./easyrsa build-client-full $CLIENT nopass
	# Generates the custom client.ovpn
	echo ""
	newclient "$CLIENT"
	echo ""
        arquivo=($CLIENT.ovpn)
        mv /root/$arquivo /root/arquivosopen
	useradd -M -s /bin/false -d /home/opencliente/ $CLIENT
	clear
        echo "-------------------------------------------"
	echo "Agora crie uma senha para este cliente."
	echo "Vale lembrar que como esta usando OpenVPN"
	echo "NÃO informe esta senha ao seu cliente,"
	echo "assim preservara o sistema de gerenciamento"
	echo "de validade. Digite qualquer coisa, afinal"
	echo "esta senha não será usada."
        echo "-------------------------------------------"
	echo " "
	read -p "Digite a senha para o cliente $CLIENT: " -e -i IdiiIIhgIi@[idiInbj2bjn senha
	usermod -p $(openssl passwd -1 $senha) $CLIENT
        clear
	echo "----------------------------------"
	echo "Agora vamos definir a validade...."
	echo "Escolha primeiro o Dia, depois MÊS"
	echo "E por fim o ANO de validade. Este "
	echo "script já pre determina a validade"
	echo "com 1 mês a frente então basta "
	echo "pressionar ENTER e confirmar a"
	echo "data ou modifique caso deseje....."
	echo "----------------------------------"
	DIAD=$(date +%d)  
	MESM=$(date +%m)
	ANOA=$(date +%Y)
	MESNOVO=$(($MESM+01))
	MESNOVOZ=`seq -f "%02g" $MESNOVO $MESNOVO`
	read -p "Digite o DIA com dois dígitos: " -e -i $DIAD dia
	echo " "
	read -p "Digite o MES com dois dígitos: " -e -i $MESNOVOZ mes
	echo " "
	read -p "Digite o ANO com quatro dígitos: " -e -i $ANOA ano
	usermod -e "$ano"-"$mes"-"$dia" "$CLIENT"
        clear
        validade=("$ano$mes$dia")
        echo "$CLIENT $validade">> /root/openclientes.db
	echo "$CLIENT $validade">> /etc/haboryn/backupOpenclientes.db
        echo "O Certificado do usuário $CLIENT está disponível em /root/$CLIENT.ovpn"
        echo "Para verificar basta digitar: ls /root/arquivosopen"
        echo "Para pegar este arquivo.ovpn use comandos ou aplicativos SFTP"
        echo " "
        echo "--------------------------------------------"
        echo "Usuário OpenVPN $CLIENT criado com sucesso"
	echo "a validade do cliente $CLIENT é: $dia/$mes/$ano"
        echo "IP do servidor: $IP"
        echo "--------------------------------------------"
  sleep 1
  gerenciadorovpn;;
  
  02)
  
	NUMBEROFCLIENTS=$(tail -n +2 /etc/openvpn/easy-rsa/pki/index.txt | grep -c "^V")
	if [[ "$NUMBEROFCLIENTS" = '0' ]]; then
		echo ""
		echo "Você não tem nenhum usuário existente no OpenVPN!"
		exit
	fi
	echo ""
	echo "Qual usuário deseja remover?"
	tail -n +2 /etc/openvpn/easy-rsa/pki/index.txt | grep "^V" | cut -d '=' -f 2 | nl -s ') '
	if [[ "$NUMBEROFCLIENTS" = '1' ]]; then
		read -p "Selecione um usuário [1]: " CLIENTNUMBER
	else
		read -p "Selecione um usuário [1-$NUMBEROFCLIENTS]: " CLIENTNUMBER
	fi
	CLIENT=$(tail -n +2 /etc/openvpn/easy-rsa/pki/index.txt | grep "^V" | cut -d '=' -f 2 | sed -n "$CLIENTNUMBER"p)
	cd /etc/openvpn/easy-rsa/
	./easyrsa --batch revoke $CLIENT
	./easyrsa gen-crl
	rm -rf pki/reqs/$CLIENT.req
	rm -rf pki/private/$CLIENT.key
	rm -rf pki/issued/$CLIENT.crt
	rm -rf /etc/openvpn/crl.pem
	cp /etc/openvpn/easy-rsa/pki/crl.pem /etc/openvpn/crl.pem
	# CRL is read with each client connection, when OpenVPN is dropped to nobody
	chown nobody:$GROUPNAME /etc/openvpn/crl.pem
	echo ""
        arquivo=$('$CLIENT'.ovpn)
        #Deletando Arquivo .ovpn
        arquivo=($CLIENT.ovpn)
        rm /root/arquivosopen/$arquivo
	userdel --force "$CLIENT"
        grep -v ^$CLIENT[[:space:]] /root/openclientes.db > /tmp/haboryn ; cat /tmp/haboryn > /root/openclientes.db
	grep -v ^$CLIENT[[:space:]] /etc/haboryn/backupOpenclientes.db > /tmp/haboryn ; cat /tmp/haboryn > /etc/haboryn/backupOpenclientes.db
        echo " "
	echo "Usuário $CLIENT removido"
	exit
  sleep 1
  gerenciadorovpn;;
  
  03)
	read -p "Nome do usuário OpenVPN para alterar a validade: " user
	if [[ -z $user ]]
	then
		echo ""
		tput setaf 7 ; tput setab 4 ; tput bold ; echo "Você digitou um nome de usuário vazio ou inválido!" ; tput sgr0
		echo ""
		exit 1
	else
		awk -F : ' { print $1 }' /etc/passwd > /tmp/users
		if grep -Fxq "$user" /tmp/users
		then
                	echo " "
        	else
                	clear
                	while true
                	do
				tput sgr0
				echo "----------------------------"
				echo "Usuário $user não existe..."
				echo " "
				echo "Digite o nome do usuário OpenVPN que deseja renovar:"
        			echo "---------------------------------------------------------"
				read -p "Nome do usuário: " user
                        	awk -F : ' { print $1 }' /etc/passwd > /tmp/users 
				if grep -Fxq "$user" /tmp/users
                        	then
			        	break
				else
                                	echo " "
                        	fi
			done
		fi
		clear
		echo "----------------------------------"
		echo "Agora vamos definir a validade...."
		echo "Escolha primeiro o Dia, depois MÊS"
		echo "E por fim o ANO de validade. Este "
		echo "script já pre determina a validade"
		echo "com 1 mês a frente então basta "
		echo "pressionar ENTER e confirmar a"
		echo "data ou modifique caso deseje....."
		echo "----------------------------------"
		DIAD=$(date +%d)  
		MESM=$(date +%m)
       		ANOA=$(date +%Y)
		MESNOVO=$(expr $MESM + 01)
		MESNOVOZ=`seq -f "%02g" $MESNOVO $MESNOVO`
		read -p "Digite o DIA com dois dígitos: " -e -i $DIAD dia
		echo " "
		read -p "Digite o MÊS com dois dígitos: " -e -i $MESNOVOZ mes
		echo " "
		read -p "Digite o ANO com quatro dígitos: " -e -i $ANOA ano
		clear
		usermod -e "$ano"-"$mes"-"$dia" "$user"
		echo " "
        	echo " "
        	validade=("$ano$mes$dia")
        	grep -v ^$user[[:space:]] /root/openclientes.db > /tmp/mudar
		mv /tmp/mudar /root/openclientes.db
        	echo "$user $validade">> /root/openclientes.db
        	##mudanca
        	grep -v ^$user[[:space:]] etc/haboryn/backupOpenclientes.db > /tmp/mudar
		mv /tmp/mudar etc/haboryn/backupOpenclientes.db
		echo "$user $validade">> /etc/haboryn/backupOpenclientes.db
		echo "-----------------------------------------------------------"
		echo "Validade do cliente $user alterada para: $dia/$mes/$ano"
        	echo "IP do Servidor: $IP"
		echo "-----------------------------------------------------------"

	fi
        clear
	echo "---------------"
	echo "opção invalida!"
	echo "---------------"
        clear
	
sleep 2
gerenciadorovpn;;

esac
